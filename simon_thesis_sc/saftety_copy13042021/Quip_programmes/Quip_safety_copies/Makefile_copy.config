# H0 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# H0 X
# H0 X   libAtoms+QUIP: atomistic simulation library
# H0 X
# H0 X   Portions of this code were written by
# H0 X     Albert Bartok-Partay, Silvia Cereda, Gabor Csanyi, James Kermode,
# H0 X     Ivan Solt, Wojciech Szlachta, Csilla Varnai, Steven Winfield.
# H0 X
# H0 X   Copyright 2006-2010.
# H0 X
# H0 X   These portions of the source code are released under the GNU General
# H0 X   Public License, version 2, http://www.gnu.org/copyleft/gpl.html
# H0 X
# H0 X   If you would like to license the source code under different terms,
# H0 X   please contact Gabor Csanyi, gabor@csanyi.net
# H0 X
# H0 X   Portions of this code were written by Noam Bernstein as part of
# H0 X   his employment for the U.S. Government, and are not subject
# H0 X   to copyright in the USA.
# H0 X
# H0 X
# H0 X   When using this software, please cite the following reference:
# H0 X
# H0 X   http://www.libatoms.org
# H0 X
# H0 X  Additional contributions by
# H0 X    Alessio Comisso, Chiara Gattinoni, and Gianpietro Moras
# H0 X
# H0 XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX


SHELL := /bin/bash

config: ${BUILDDIR} arch
	@echo
	@echo "In the following, hit enter to accept the defaults."
	@echo
ifneq (${shell [ -f ${BUILDDIR}/Makefile.inc ] && echo 1 || echo 0},1)
	@echo "# Place to override setting elsewhere, in particular things set in Makefile.${QUIP_ARCH}" > ${BUILDDIR}/Makefile.inc
	@echo "# look in ${QUIP_ROOT}/arch/Makefile.${QUIP_ARCH} for defaults set by arch" >> ${BUILDDIR}/Makefile.inc
	@echo "# " >> ${BUILDDIR}/Makefile.inc
	@echo "# F77=${F77}" >> ${BUILDDIR}/Makefile.inc
	@echo "# F90=${F90}" >> ${BUILDDIR}/Makefile.inc
	@echo "# F95=${F95}" >> ${BUILDDIR}/Makefile.inc
	@echo "# CC=${CC}" >> ${BUILDDIR}/Makefile.inc
	@echo "# CPLUSPLUS=${CPLUSPLUS}" >> ${BUILDDIR}/Makefile.inc
	@echo "# FPP=${FPP}" >> ${BUILDDIR}/Makefile.inc
	@echo "# LINKER=${LINKER}" >> ${BUILDDIR}/Makefile.inc
	@echo "# LIBTOOL=${LIBTOOL}" >> ${BUILDDIR}/Makefile.inc
	@echo "# OPTIM=" >> ${BUILDDIR}/Makefile.inc
	@echo "# COPTIM=" >> ${BUILDDIR}/Makefile.inc
	@echo "# QUIPPY_INSTALL_OPTS=" >> ${BUILDDIR}/Makefile.inc
ifdef SAMPLE_DEBUG
	@echo "# DEBUG=${SAMPLE_DEBUG}" >> ${BUILDDIR}/Makefile.inc
endif
	@echo "# DEBUG=${DEBUG}" >> ${BUILDDIR}/Makefile.inc
	@echo "# CDEBUG=" >> ${BUILDDIR}/Makefile.inc
endif

# BUILD OPTIONS
# #############

	@echo
	@echo "BUILD OPTIONS"
	@echo "============="
	@echo

ifndef MATH_LINKOPTS
	@echo
	@echo "Please enter the linking options for LAPACK and BLAS libraries:"
	@echo "   Default: ${DEFAULT_MATH_LINKOPTS}"
	@read MATH_LINKOPTS && if [[ $$MATH_LINKOPTS == "" ]] ; then \
	  echo "MATH_LINKOPTS=${DEFAULT_MATH_LINKOPTS}" >> ${BUILDDIR}/Makefile.inc ; \
	  else echo "MATH_LINKOPTS=$$MATH_LINKOPTS" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifndef PYTHON
	@echo
	@echo "Please enter the preferred python command:"
	@echo "   Default: $(shell command -v python)"
	@read PYTHON && if [[ $$PYTHON == "" ]] ; then \
	  echo "PYTHON=$(shell command -v python)" >> ${BUILDDIR}/Makefile.inc ; \
	  else echo "PYTHON=$$PYTHON" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifndef PIP
	@echo
	@echo "Please enter the preferred pip command:"
	@echo "   Default: $(shell command -v pip)"
	@read PIP && if [[ $$PIP == "" ]] ; then \
	  echo "PIP=$(shell command -v pip)" >> ${BUILDDIR}/Makefile.inc ; \
	  else echo "PIP=$$PIP" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifeq ($(origin EXTRA_LINKOPTS), undefined)
	@echo
	@echo "Please enter any other extra linking options:"
	@echo "   Default: none"
	@read EXTRA_LINKOPTS; echo "EXTRA_LINKOPTS=$$EXTRA_LINKOPTS" >> ${BUILDDIR}/Makefile.inc
endif

# OPTIONAL INTERNAL FEATURES
# ##########################

	@echo
	@echo "OPTIONAL INTERNAL FEATURES"
	@echo "=========================="
	@echo

ifndef HAVE_CP2K
	@echo
	@echo "Would you like to compile with CP2K support? [y/n]"
	@echo "   Default: n"
	@read HAVE_CP2K_Q && if [[ $$HAVE_CP2K_Q == 'y' ]]; then \
	  echo "HAVE_CP2K=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_CP2K=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifndef HAVE_VASP
	@echo
	@echo "Would you like to compile with VASP support? [y/n]"
	@echo "   Default: n"
	@read HAVE_VASP_Q && if [[ $$HAVE_VASP_Q == 'y' ]]; then \
	  echo "HAVE_VASP=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_VASP=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifndef HAVE_TB
	@echo
	@echo "Would you like to compile with Tight Binding (TB) support? [y/n]"
	@echo "   Default: n"
	@read HAVE_TB_Q && if [[ $$HAVE_TB_Q == 'y' ]]; then \
	  echo "HAVE_TB=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_TB=0" >> ${BUILDDIR}/Makefile.inc ; fi	
endif

ifndef HAVE_PRECON
	@echo
	@echo "Would you like to compile with preconditioned minimisation support? (not working with Intel compiler) [y/n]"
	@echo "   Default: y"
	@read HAVE_PRECON_Q && if [[ $$HAVE_PRECON_Q == 'n' ]]; then \
	  echo "HAVE_PRECON=0" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_PRECON=1" >> ${BUILDDIR}/Makefile.inc ; fi	
endif

ifndef HAVE_LOTF
	@echo
	@echo "Would you like to compile with Learn-on-the-fly (LOTF) support? [y/n]"
	@echo "   Default: n"
	@read HAVE_LOTF_Q && if [[ $$HAVE_LOTF_Q == 'y' ]]; then \
	  echo "HAVE_LOTF=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_LOTF=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifndef HAVE_ONIOM
	@echo
	@echo "Would you like to compile with ONIOM support? [y/n]"
	@echo "   Default: n"
	@read HAVE_ONIOM_Q && if [[ $$HAVE_ONIOM_Q == 'y' ]]; then \
	  echo "HAVE_ONIOM=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_ONIOM=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifndef HAVE_LOCAL_E_MIX
	@echo
	@echo "Would you like to compile with LOCAL_E_MIX support? [y/n]"
	@echo "   Default: n"
	@read HAVE_LOCAL_E_MIX_Q && if [[ $$HAVE_LOCAL_E_MIX_Q == 'y' ]]; then \
	  echo "HAVE_LOCAL_E_MIX=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_LOCAL_E_MIX=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifndef HAVE_QC
	@echo
	@echo "Would you like to compile with QuasiContinuum wrapper support? [y/n]"
	@echo "   Default: n"
	@read HAVE_QC_Q && if [[ $$HAVE_QC_Q == 'y' ]]; then \
	  echo "HAVE_QC=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_QC=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif

# OPTIONAL FEATURES (EXTRA CODE REQUIRED)
# #######################################

	@echo
	@echo "OPTIONAL FEATURES (EXTRA CODE REQUIRED)"
	@echo "======================================="
	@echo

ifndef HAVE_GAP
	@echo
	@if [[ ! -d src/GAP ]] ; then \
	  echo "GAP sources must be acquired separately and placed in the src/GAP subdirectory."; \
	 fi
	@echo "Would you like to compile with GAP support ? [y/n]"
	@echo "   Default: n"
	@read HAVE_GAP_Q && if [[ $$HAVE_GAP_Q == 'y' ]]; then \
	  echo "HAVE_GAP=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_GAP=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifndef HAVE_DESCRIPTORS_EXTERNAL
	@echo
	@if [[ -f src/GAP/descriptors_external.inc ]] ; then \
	echo "HAVE_DESCRIPTORS_EXTERNAL=1" >> ${BUILDDIR}/Makefile.inc ; \
	else \
	echo "HAVE_DESCRIPTORS_EXTERNAL=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifndef HAVE_TURBOGAP
	@echo
	@echo "Please enter directories where the Turbo-GAP main directory is:"
	@echo "   Default: no Turbo-GAP present"
	@read TURBOGAP_DIR && if [[ $$TURBOGAP_DIR ]] ; then \
	  echo "TURBOGAP_DIR=$$TURBOGAP_DIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_TURBOGAP=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	  echo "HAVE_TURBOGAP=0" >> ${BUILDDIR}/Makefile.inc;\
	 fi
	@echo
endif


ifndef HAVE_QR
	@echo
	@echo "Would you like to turn on QR decomposition for some GAP operations? [y/n]"
	@echo "   Default: y"
	@read HAVE_QR_Q && if [[ $$HAVE_QR_Q == 'n' ]]; then \
	  echo "HAVE_QR=0" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	   echo "HAVE_QR=1" >> ${BUILDDIR}/Makefile.inc ; fi
endif

ifndef HAVE_THIRDPARTY
	@echo "Checking for ThirdParty directory..." 
	@if [[ -d src/ThirdParty ]] ; then \
	  echo "   Found." ; \
	  echo "HAVE_THIRDPARTY=1" >> ${BUILDDIR}/Makefile.inc ; \
	else \
	  echo "   Not found. " ; \
	  echo "HAVE_THIRDPARTY=0" >> ${BUILDDIR}/Makefile.inc ; \
	fi
endif

ifndef HAVE_FX
	@echo
	@echo "Would you like to compile with TTM3-F support? [y/n]"
	@echo "   Default: n"
	@read HAVE_FX_Q && \
	   if [[ $$HAVE_FX_Q == 'y' ]]; then \
	     if [[ ! -d src/ThirdParty/nttm3f ]] ; then \
	       echo "TTM3-F sources must be present in the src/ThirdParty directory"; \
		 else \
		   echo "HAVE_FX=1" >> ${BUILDDIR}/Makefile.inc ; \
		 fi \
	   else \
	     echo "HAVE_FX=0" >> ${BUILDDIR}/Makefile.inc ; \
	   fi
endif

ifndef HAVE_SCME
	@echo "Would you like to compile with SCME support ? [y/n]"
	@echo "   Default: n"
	@read HAVE_SCME_Q && \
	   if [[ $$HAVE_SCME_Q == 'y' ]]; then \
	     if [[ ! -d src/ThirdParty/scme ]] ; then \
	       echo "SCME sources must be present in the src/ThirdParty directory"; \
	     else \
	       echo "HAVE_SCME=1" >> ${BUILDDIR}/Makefile.inc ; \
	     fi \
	   else \
	     echo "HAVE_SCME=0" >> ${BUILDDIR}/Makefile.inc ; \
	   fi
endif

ifndef HAVE_MTP
	@echo "Would you like to compile with MTP support ? [y/n]"
	@echo "   Default: n"
	@read HAVE_MTP && \
	   if [[ $$HAVE_MTP == 'y' ]]; then \
	     if [[ ! -d src/ThirdParty/mtp ]] ; then \
	       echo "MTP sources must be present in the src/ThirdParty directory"; \
	     else \
	       echo "HAVE_MTP=1" >> ${BUILDDIR}/Makefile.inc ; \
	     fi \
	   else \
	     echo "HAVE_MTP=0" >> ${BUILDDIR}/Makefile.inc ; \
	   fi
endif

ifndef HAVE_MBD
	@echo "Would you like to compile with many-body dispersion support ? [y/n]"
	@echo "   Default: n"
	@read HAVE_MBD && \
	   if [[ $$HAVE_MBD == 'y' ]]; then \
	     if [[ ! -d src/ThirdParty/MBD ]] ; then \
	       echo "MBD sources must be present in the src/ThirdParty directory"; \
	     else \
	       echo "HAVE_MBD=1" >> ${BUILDDIR}/Makefile.inc ; \
	     fi \
	   else \
	     echo "HAVE_MBD=0" >> ${BUILDDIR}/Makefile.inc ; \
	   fi
endif

ifndef HAVE_TTM_NF
	@echo "Would you like to compile with TTM_NF support ? [y/n]"
	@echo "   Default: n"
	@read HAVE_TTM_NF_Q && \
	   if [[ $$HAVE_TTM_NF_Q == 'y' ]]; then \
	     if [[ ! -d src/ThirdParty/ttm_nf ]] ; then \
	       echo "TTM_NF sources must be present in the src/ThirdParty directory"; \
	     else \
	       echo "HAVE_TTM_NF=1" >> ${BUILDDIR}/Makefile.inc ; \
	     fi \
	   else \
	     echo "HAVE_TTM_NF=0" >> ${BUILDDIR}/Makefile.inc ; \
	   fi
endif

ifndef HAVE_CH4
	@echo "Would you like to compile with CH4 support ? [y/n]"
	@echo "   Default: n"
	@read HAVE_CH4_Q && \
	   if [[ $$HAVE_CH4_Q == 'y' ]]; then \
	     if [[ ! -d src/ThirdParty/scme ]] ; then \
	       echo "CH4 sources must be present in the src/ThirdParty directory"; \
	     else \
	       echo "HAVE_CH4=1" >> ${BUILDDIR}/Makefile.inc ; \
	     fi \
	   else \
	     echo "HAVE_CH4=0" >> ${BUILDDIR}/Makefile.inc ; \
	   fi
endif

# OPTIONAL EXTERNAL LIBRARIES
#############################

	@echo
	@echo "OPTIONAL EXTERNAL LIBRARIES"
	@echo "==========================="
	@echo


ifndef HAVE_NETCDF4
	@echo "Would you like to compile with NetCDF4 support? [y/n]"
	@echo "   Default: n"
	@read -r HAVE_NETCDF4_Q && if [[ $$HAVE_NETCDF4_Q == 'y' ]]; then \
	  echo "Enter link flags for NetCDF4"; \
	  if NETCDF4_LIBS=$$(pkg-config --libs netcdf 2>/dev/null); then \
	    echo "   Default from pkg-config: $$NETCDF4_LIBS"; \
	  else \
	    if NETCDF4_LIBS=$$(nc-config --libs 2>/dev/null); then \
	      echo "   Default from nc-config: $$NETCDF4_LIBS"; \
	    else \
	      echo "   No default found!"; \
	      NETCDF4_LIBS=''; \
	    fi \
	  fi ;\
	  read -r NETCDF4_LIBS_Q && if [[ -z $$NETCDF4_LIBS_Q ]]; then \
	    echo "NETCDF4_LIBS=$$NETCDF4_LIBS" >> ${BUILDDIR}/Makefile.inc; \
	  else \
	    echo "NETCDF4_LIBS=$$NETCDF4_LIBS_Q" >> ${BUILDDIR}/Makefile.inc; \
	  fi ;\
	  echo "Enter additonal flags for NetCDF (e.g. include directories: -I/usr/lib)"; \
	  if NETCDF4_FLAGS=$$(pkg-config --cflags netcdf 2>/dev/null); then \
	    echo "   Default from pkg-config: $$NETCDF5_FLAGS"; \
	  else \
	    if NETCDF4_FLAGS=$$(nc-config --cflags 2>/dev/null); then \
	      echo "   Default from nc-config: $$NETCDF4_FLAGS"; \
	    else \
	      echo "   No default found!"; \
	      NETCDF4_FLAGS=''; \
	    fi \
	  fi ;\
	  read -r NETCDF4_FLAGS_Q && if [[ -z $$NETCDF4_FLAGS_Q ]]; then \
	    echo "NETCDF4_FLAGS=$$NETCDF4_FLAGS" >> ${BUILDDIR}/Makefile.inc; \
	  else \
	    echo "NETCDF4_FLAGS=$$NETCDF4_FLAGS_Q" >> ${BUILDDIR}/Makefile.inc; \
	  fi ;\
	  echo "HAVE_NETCDF4=1" >> ${BUILDDIR}/Makefile.inc; \
	else \
	  echo "HAVE_NETCDF4=0" >> ${BUILDDIR}/Makefile.inc; \
	fi
endif

ifndef HAVE_MDCORE
	@echo
	@echo "Please enter directories where MDCORE libraries are kept:"
	@echo "   Default: no MDCORE present"
	@read MDCORE_LIBDIR && if [[ $$MDCORE_LIBDIR ]] ; then \
	  echo "MDCORE_LIBDIR=$$MDCORE_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo ; \
	  echo "Please enter directory where MDCORE include files are kept:" ; \
	  read MDCORE_INCDIR && echo "MDCORE_INCDIR=$$MDCORE_INCDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_MDCORE=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	  echo "HAVE_MDCORE=0" >> ${BUILDDIR}/Makefile.inc;\
	 fi
endif

ifndef HAVE_ASAP
	@echo
	@echo "Please enter directory where the ASAP library is kept:"
	@echo "   Default: no ASAP library present"
	@read ASAP_LIBDIR && if [[ $$ASAP_LIBDIR ]] ; then \
	  echo "ASAP_LIBDIR=$$ASAP_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_ASAP=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else echo "HAVE_ASAP=0" >> ${BUILDDIR}/Makefile.inc ; fi
endif

#ifndef HAVE_KIM
#	@echo
#	@echo "Please enter directory where the OpenKIM library is kept:"
#	@echo "   Default: no OpenKIM support"
#	@read KIM_DIR && if [[ $$KIM_DIR ]]; then \
#	  echo "KIM_DIR=$$KIM_DIR" >> ${BUILDDIR}/Makefile.inc ; \
#	  echo "Turn off KIM test.kim autogeneration capability (useful for OpenKIM pipeline only)? [y/n]"; \
#	  echo "   Default: n"; \
#	  read KIM_NO_AUTOGEN_Q && if [[ $$KIM_NO_AUTOGEN_Q == 'y' ]]; then \
#	    echo "KIM_NO_AUTOGENERATE_TEST_KIM=1" >> ${BUILDDIR}/Makefile.inc ; \
#	   else \
#	    echo "KIM_NO_AUTOGENERATE_TEST_KIM=0" >> ${BUILDDIR}/Makefile.inc ; fi; \
#	  echo "HAVE_KIM=1" >> ${BUILDDIR}/Makefile.inc ; \
#	 else \
#	  echo "HAVE_KIM=0" >> ${BUILDDIR}/Makefile.inc ; fi;
#endif

ifndef HAVE_CGAL
	@echo
	@echo "Please enter directories where CGAL libraries are kept:"
	@echo "   Default: no CGAL present"
	@read CGAL_LIBDIR && if [[ $$CGAL_LIBDIR ]] ; then \
	  echo "CGAL_LIBDIR=$$CGAL_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo ; \
	  echo "Please enter directory where CGAL include files are kept:" ; \
	  read CGAL_INCDIR && echo "CGAL_INCDIR=$$CGAL_INCDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo "HAVE_CGAL=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	  echo "HAVE_CGAL=0" >> ${BUILDDIR}/Makefile.inc;\
	 fi
endif

ifndef HAVE_METIS
	@echo
	@echo "Please enter directories where METIS libraries are kept:"
	@echo "   Default: no METIS present"
	@read METIS_LIBDIR && if [[ $$METIS_LIBDIR ]] ; then \
	  echo "METIS_LIBDIR=$$METIS_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo ; \
	  echo "HAVE_METIS=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	  echo "HAVE_METIS=0" >> ${BUILDDIR}/Makefile.inc;\
	 fi
endif

ifndef HAVE_LMTO_TBE
	@echo
	@echo "Please enter directories where LMTO_TBE libraries are kept:"
	@echo "   Default: no LMTO_TBE present"
	@read LMTO_TBE_LIBDIR && if [[ $$LMTO_TBE_LIBDIR ]] ; then \
	  echo "LMTO_TBE_LIBDIR=$$LMTO_TBE_LIBDIR" >> ${BUILDDIR}/Makefile.inc ; \
	  echo ; \
	  echo "HAVE_LMTO_TBE=1" >> ${BUILDDIR}/Makefile.inc ; \
	 else \
	  echo "HAVE_LMTO_TBE=0" >> ${BUILDDIR}/Makefile.inc;\
	 fi
endif

ifndef SIZEOF_FORTRAN_T
	@/bin/bash ${QUIP_ROOT}/bin/find_sizeof_fortran_t >> ${BUILDDIR}/Makefile.inc
endif
